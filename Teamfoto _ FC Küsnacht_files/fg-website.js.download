/// <reference path="../directives/jquery.d.ts" />
/// <reference path="../directives/underscore.d.ts" />
/// <reference path="../directives/jqueryui.d.ts" />
/**
 * FgWebsite class
 *
 */
var _this;
var websiteNavMenu = [];
var FgWebsite = /** @class */ (function () {
    function FgWebsite() {
        /*
         * default template ids for topnavigation, header and background
         */
        this.templateTopNav = 'template_top_navigation';
        this.templateHeaderNav = 'template_header_navigation';
        this.templateAdditionNav = 'template_addition_navigation';
        this.templateAdditionNavMobile = 'template_addition_navigation_mobile';
        this.templateBackground = 'template_background';
        this.templateAdminTopNavLG = 'template_admin_top_navigation_lg';
        this.templateAdminTopNavXS = 'template_admin_top_navigation_xs';
        this.sidebarData = {};
        this.navigationMenuPath = '';
        this.activeHeaderMenu = '';
        this.subNavigationData = [];
        this.contactLang = '';
        this.clubLang = '';
        this.subLevelData = [];
        this.eventInlineNavOptions = {};
        _this = this;
    }
    /**
     * initialize - header ,top navigation
     */
    FgWebsite.prototype.init = function () {
        if (isHeader == true) {
            FgWebsiteThemeObj.headerNav(headerNav, 'webpagelayout-header');
            FgWebsiteThemeObj.callAdditionalNav('webpagelayout-header');
        }
        else {
            $(".fg-web-main-content").removeClass('fg-visible-hidden');
            $('body').removeClass('no-scroll');
        }
        this.bindBackground('fg-web-bg-wrapper-id');
        this.setSiteLanguage();
        FgWebsiteThemeObj.onScrollEvent();
        this.onAjaxStopEvents();
        this.topAdditionalNavClick();
        this.initArticleCommonClick();
        this.fgAjaxError();
        this.fgButtonUrl();
        this.showLanguageDropdown();
    };
    FgWebsite.prototype.fgButtonUrl = function () {
        $('body').on('click', '.fg-btn', function () {
            var url = $(this).attr('data-url');
            var linkType = $(this).attr('data-linkType');
            if (linkType == 'SAME_TAB') {
                window.location.href = url;
            }
            else {
                $('#fg-temp-link').remove();
                var tempEl = $('<a id="fg-temp-link" target="_blank"></a>').attr("href", url);
                $('body').append(tempEl);
                $('#fg-temp-link')[0].click();
            }
        });
    };
    FgWebsite.prototype.buildHeaderNavigation = function (data) {
        var headerData = this.renderHeaderNavigationLevels(data, 1, []);
        return headerData;
    };
    FgWebsite.prototype.renderHeaderNavigationLevels = function (levelData, level, parentIds) {
        var htmldata = '';
        var headerMenuTemplate = (level == 1) ? "template_header_navigation_level1" : (level == 2) ? "template_header_navigation_level2" : "template_header_navigation_level3";
        var parentIdsTemp = (level == 1) ? [] : parentIds;
        _.each(levelData, function (fieldValue, fieldKey) {
            if ((parseInt(fieldValue.parent_id) !== 1) && (_.indexOf(parentIdsTemp, fieldValue.parent_id) == -1)) {
                parentIdsTemp.push(fieldValue.parent_id);
            }
            var subLevelData = fieldValue.subMenus;
            var levelObject = { parentIds: parentIdsTemp, content: _this.renderHeaderNavigationLevels(subLevelData, parseInt(fieldValue.level) + 1, parentIdsTemp), navPath: _this.navigationMenuPath, activeHeaderMenu: _this.activeHeaderMenu, subNavigationData: _this.subNavigationData, lang: _this.contactLang, clubLang: _this.clubLang };
            htmldata += _this.renderTemplate(headerMenuTemplate, { levelObject: levelObject, item: fieldValue });
        });
        return htmldata;
    };
    FgWebsite.prototype.renderTemplate = function (templateId, templateData) {
        var template = FGTemplate.bind(templateId, templateData);
        if (templateData.item.page_id !== null || templateData.item.external_link !== null) {
            _.each(templateData.levelObject.parentIds, function (value, key) {
                if (!_.has(_this.subNavigationData, value)) {
                    _this.subNavigationData[value] = templateData.item;
                }
            });
        }
        return template;
    };
    /**
     * Method to make activate parent menus on default conditions and on hover cases
     */
    FgWebsite.prototype.navigationActivation = function () {
        // to make parent menus default active after loading on 3rd level menus
        $('.fg-dev-nav-active').parent('ul').parent('li.dropdown-submenu').addClass('active').parent('ul').parent('li.dropdown').addClass('active');
        // to make parent menus default active after loading on 2nd level menus
        $('.fg-dev-nav-active').parent('ul').parent('li.dropdown').addClass('active');
        // to make parent menus active on hover
        $('li.dropdown-submenu').hover(function () {
            // to make parent menus default active on hover on 3rd level menus
            $(this).parent('ul').parent('li.dropdown-submenu').addClass('hover').parent('ul').parent('li.dropdown').addClass('hover');
            // to make parent menus default active after loading on 2nd level menus
            $(this).parent('ul').parent('li.dropdown').addClass('hover');
        }, function () {
            // to make parent menus default active on hover on 3rd level menus
            $(this).parent('ul').parent('li.dropdown-submenu').removeClass('hover').parent('ul').parent('li.dropdown').removeClass('hover');
            // to make parent menus default active after loading on 2nd level menus
            $(this).parent('ul').parent('li.dropdown').removeClass('hover');
        });
    };
    /**
     * Show language Dropdown on Hover
     * website language hover function & added 1 sec delay on hoverout
     */
    FgWebsite.prototype.showLanguageDropdown = function () {
        var langHoverTimeout;
        $('.fg-current-language,.current-language').hover(function () {
            clearTimeout(langHoverTimeout);
            $(this).addClass('open');
        }, function () {
            var _this = $(this);
            langHoverTimeout = setTimeout(function () {
                _this.removeClass('open');
            }, 1000);
        });
    };
    /**
     * Show active menus and submenus
     */
    FgWebsite.prototype.showActiveMenu = function () {
        var currentActiveMenu = $('#fg-web-header-menus').find('.active');
        $.each(currentActiveMenu, function () {
            var $this = $(this);
            $this.addClass('open');
        });
    };
    /**
     * bind the background with remaining layout
     */
    FgWebsite.prototype.bindBackground = function (parentDivId) {
        var fgWebsite = new FgWebsite();
        var htmlFinal = FGTemplate.bind(fgWebsite.templateBackground);
        $('#' + parentDivId).html(htmlFinal);
        fgWebsite.backgroundSliderConfig();
    };
    /**
     * unite gallery configuration settings for layout background
     */
    FgWebsite.prototype.backgroundSliderConfig = function () {
        $('.fg-web-bg-wrapper .fg-dev-slider').each(function (i, value) {
            var displayTime = $(value).data('slidertime');
            var sliderOption = {
                gallery_theme: "slider",
                slider_transition: "fade",
                tile_enable_action: false,
                tile_enable_overlay: false,
                gallery_play_interval: displayTime * 1000,
                slider_enable_play_button: false,
                slider_enable_arrows: false,
                slider_enable_bullets: false,
                slider_enable_progress_indicator: false,
                gallery_width: $(window).width() + 10,
                gallery_height: $(window).height() + 10,
            };
            var randomId = $(value).data('random-id');
            $("#bg-slider-" + randomId).unitegallery(sliderOption);
        });
    };
    /**
     * events to be done after ajax
     */
    FgWebsite.prototype.onAjaxStopEvents = function () {
        //scroll to top
        $(window).scrollTop(0);
        $('html').animate({ scrollTop: 0 }, 1);
        $('body').animate({ scrollTop: 0 }, 1);
        //on window resize reinit unitegallery slider
        $(window).resize(function () {
            var fgWebsite = new FgWebsite();
            fgWebsite.backgroundSliderConfig();
        });
    };
    FgWebsite.prototype.topNavigation = function (path, parentDivId, params) {
        var _this = this;
        $.ajax({ type: "GET", url: path, async: false, data: JSON.parse(params),
            success: function (jsonData) {
                _this.sidebarData = jsonData;
                _this.renderTopNavHtml(parentDivId, params);
            }
        });
    };
    FgWebsite.prototype.renderTopNavHtml = function (parentDivId, params) {
        var windowWidth = $(window).width();
        var _this = this;
        var sidebarData = _this.sidebarData;
        if (typeof sidebarData != 'undefined' && sidebarData != null) {
            if (windowWidth < 992) {
                sidebarData.topNavArr.combinedMenu = _.union(sidebarData.topNavArr.leftmenu, sidebarData.topNavArr.rightmenu);
                var htmlFinal = FGTemplate.bind(_this.templateAdminTopNavXS, sidebarData);
                var container = '.fg-page-header-small';
            }
            else {
                var htmlFinal = FGTemplate.bind(_this.templateAdminTopNavLG, sidebarData);
                var container = '.fg-page-header-large';
            }
        }
        if ($(container).length == 0) {
            $('#' + parentDivId).html(htmlFinal);
            _this.topNavigationSearch(params);
            var FgwebsitepageObj = new Fgwebsitepage();
            FgwebsitepageObj.handleLoginButtonsClick('fg-dev-admin-top-navigation');
        }
        return;
    };
    FgWebsite.prototype.topNavigationSearch = function (params) {
        var params = JSON.parse(params);
        if ($('#internalTopNavSearch').length > 0) {
            $('#webpage-admin-header').on('click', '.fbautocomplete-main-div', function () {
                $(this).parent().addClass('open');
            });
            $('#internalTopNavSearch').on('focusout', function () {
                $(this).parent().parent().removeClass('open');
            });
            $('#internalTopNavSearch').fbautocomplete({
                url: params.contactSearchUrl,
                maxItems: 1,
                useCache: false,
                onItemSelected: function ($obj, itemId, selected) {
                    var overViewPath = selected[0]['path'];
                    window.location.href = overViewPath;
                }
            });
        }
        //search for small resolutions
        if ($('#internalTopNavSearchSmallRes').length > 0) {
            $('#internalTopNavSearchSmallRes').fbautocomplete({
                url: params.contactSearchUrl,
                maxItems: 1,
                useCache: false,
                onItemSelected: function ($obj, itemId, selected) {
                    var overViewPath = selected[0]['path'];
                    window.location.href = overViewPath;
                }
            });
        }
    };
    FgWebsite.prototype.renderPromoBox = function (pathPost, pathCookie) {
        $('.fg-web-promobox-wrapper').hide();
        if ($(window).width() >= 768) {
            $.ajax({
                type: "GET",
                url: pathPost,
                async: false,
                success: function (jsonData) {
                    if (jsonData.displayPromo == 1) {
                        $('.fg-web-promobox-wrapper').html(jsonData.displayHtml);
                        $('.fg-web-promo-toggle-btn').click(function (e) {
                            e.stopPropagation();
                            var action = $(this).attr('data-action');
                            if (action == 'close') {
                                $('.fg-web-promobox-wrapper').removeClass('open');
                            }
                            else {
                                $('.fg-web-promobox-wrapper').addClass('open');
                            }
                            if ($(this).attr('id') == 'dontDisplayPromo') {
                                $.ajax({
                                    type: "GET",
                                    url: pathCookie,
                                    async: true,
                                    success: function (response) {
                                        if (response == 'success') {
                                        }
                                        else {
                                        }
                                    }
                                });
                            }
                        });
                        $('.fg-web-promobox-wrapper').show();
                        if (jsonData.displayPromoFull == 1) {
                            $('.fg-web-promobox-wrapper').addClass('open');
                        }
                        else {
                            $('.fg-web-promobox-wrapper').removeClass('open');
                        }
                    }
                }
            });
        }
    };
    FgWebsite.prototype.setSiteLanguage = function () {
        $('#fg-website-lang-ul li a').click(function (e) {
            var lang = $(this).attr('data-id');
            var key = 'fg_website_lang_' + clubId;
            var value = lang;
            var date = new Date();
            // Default at 365 days.
            var days = 365;
            // Get unix milliseconds at current time plus number of days
            date.setTime(+date + (days * 86400000)); //24 * 60 * 60 * 1000
            document.cookie = key + "=" + value + "; expires=" + date.toGMTString() + "; path=/";
            location.reload();
        });
    };
    FgWebsite.prototype.topAdditionalNavClick = function () {
        $('body').on('click touchstart', '.fg-web-top-nav-icon', function () {
            $('.fg-web-top-nav-wrapper').toggleClass('d-flex');
            setTimeout(function () {
                $('.fg-web-top-nav-links').toggleClass('active');
            }, 500);
        });
    };
    FgWebsite.prototype.initArticleCommonClick = function () {
        $('body').on('click', '.fg-article-link', function () {
            var url = $(this).data('url');
            window.location.href = url;
        });
    };
    FgWebsite.prototype.fgAjaxError = function () {
        $(document).ajaxError(function (event, jqXHR) {
            if (jqXHR.status === 403) {
                window.location.reload();
            }
        });
    };
    /**
     * This function is to build inline navigation for events.
     * Set options - fgwebsite.eventInlineNavOptions = {'localstorage':'', 'nextPrevData':{}, 'currentPageType':'', 'selectedId':'', trans:{}}
     * currentPageType - categoryOverview, eventOverview, ctEventOverview, eventDetails, subEventDetails, eventElement
     */
    FgWebsite.prototype.handleEventInlineNavigation = function (options) {
        this.eventInlineNavOptions = options;
        var navData = null;
        if (_.contains(['ctEventOverview', 'eventDetails', 'subEventDetails', 'subscriptionForm'], this.eventInlineNavOptions['currentPageType'])) {
            navData = this.getEventInlineNavLsData();
        }
        var pageTitleBarOptions = this.getPageTitleBarOptions(navData);
        var FgWebsitePageTitleBarObj = new FgWebsitePageTitleBar('fg-dev-pagetitle-container', pageTitleBarOptions);
        // Set localstorage from current page details
        this.setEventInlineNavLsData();
    };
    /**
     * This function is to save inline navigation data in localstorage for events.
     */
    FgWebsite.prototype.setEventInlineNavLsData = function () {
        var nextPrevData = {};
        var navType = null;
        if (this.eventInlineNavOptions['currentPageType'] === 'categoryOverview') {
            navType = 'category';
        }
        if (_.contains(['eventOverview', 'ctEventOverview'], this.eventInlineNavOptions['currentPageType'])) {
            navType = 'event';
        }
        if (_.contains(['eventDetails', 'subEventDetails'], this.eventInlineNavOptions['currentPageType'])) {
            var eventId = this.eventInlineNavOptions['selectedId'];
            navType = 'subEvent' + eventId;
        }
        if (this.eventInlineNavOptions['currentPageType'] === 'eventElement') {
            navType = 'eventElement';
        }
        if (navType) {
            nextPrevData[navType] = {};
            nextPrevData[navType]['data'] = this.eventInlineNavOptions['nextPrevData'];
            nextPrevData[navType]['type'] = this.eventInlineNavOptions['currentPageType'];
            nextPrevData[navType]['backNav'] = this.eventInlineNavOptions['backNav'];
            nextPrevData[navType]['time'] = parseInt(moment().format('x'));
            var localstorageData = JSON.parse(localStorage.getItem(this.eventInlineNavOptions['localstorage']));
            var newData = $.extend({}, localstorageData, nextPrevData);
            localStorage.setItem(this.eventInlineNavOptions['localstorage'], JSON.stringify(newData));
        }
    };
    /**
     *  This function is to fetch inline navigation data from localstorage.
     */
    FgWebsite.prototype.getEventInlineNavLsData = function () {
        var inlineNavData = [];
        var prevNav = {};
        var nextNav = {};
        var backNav = {};
        var prevNavSubLabel = '';
        var nextNavSubLabel = '';
        var localstorageData = JSON.parse(localStorage.getItem(this.eventInlineNavOptions['localstorage']));
        if (!localstorageData) {
            return;
        }
        if (this.eventInlineNavOptions['currentPageType'] === 'ctEventOverview') { // For category-event overview page
            inlineNavData = localstorageData['category'];
            prevNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_CATEGORY_PREV'];
            nextNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_CATEGORY_NEXT'];
        }
        if (this.eventInlineNavOptions['currentPageType'] === 'eventDetails') { // For event details page
            // Event details page canbe accessed from both event overview(sp.page) and event element listing. To find latest page
            inlineNavData = _.last(_.sortBy(_.compact([localstorageData['event'], localstorageData['eventElement']]), 'time'));
            prevNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_PREV'];
            nextNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_NEXT'];
        }
        if (this.eventInlineNavOptions['currentPageType'] === 'subEventDetails') { // For event details page for sub event
            var parentEventId = this.eventInlineNavOptions['parentEventId'];
            inlineNavData = _.last(_.sortBy(_.compact([localstorageData['event'], localstorageData['subEvent' + parentEventId], localstorageData['eventElement']]), 'time'));
            prevNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_PREV'];
            nextNavSubLabel = this.eventInlineNavOptions['trans']['WEBSITE_EVENT_NEXT'];
        }
        if (this.eventInlineNavOptions['currentPageType'] === 'subscriptionForm') { // To show back button only in subscription form
            var parentEventId = this.eventInlineNavOptions['parentEventId'];
            inlineNavData = _.last(_.sortBy(_.compact([localstorageData['event'], localstorageData['subEvent' + parentEventId]]), 'time'));
        }
        if (_.size(inlineNavData) > 0) {
            backNav = inlineNavData['backNav'];
            inlineNavData = inlineNavData['data'];
            var currentKey = _.indexOf(inlineNavData, _.findWhere(inlineNavData, { id: this.eventInlineNavOptions['selectedId'] }));
            if (currentKey >= 0) {
                prevNav = typeof inlineNavData[currentKey - 1] === "undefined" ? {} : inlineNavData[currentKey - 1];
                prevNav['subLabel'] = prevNavSubLabel;
                nextNav = typeof inlineNavData[currentKey + 1] === "undefined" ? {} : inlineNavData[currentKey + 1];
                nextNav['subLabel'] = nextNavSubLabel;
            }
            return { 'prevNav': prevNav, 'nextNav': nextNav, 'backNav': backNav };
        }
        return false;
    };
    /**
     *  This function is to build pageTitleBarOptions.
     */
    FgWebsite.prototype.getPageTitleBarOptions = function (navData) {
        var pageTitleBarOptions = {
            titleBar: true,
            title: this.eventInlineNavOptions['pageTitle'],
            hideNextPreviousOnSmallDevices: true,
            nextPreviousLinks: ['', ''],
            nextPreviousLabel: ['', ''],
            nextPreviousSubLabel: ['', ''],
            hideBackOnSmallDevices: true,
            backButtonData: '',
            backButtonLabel: '',
            backButtonSubLabel: '',
            timeperiodData: [this.eventInlineNavOptions['timeperiodData']]
        };
        if (_.contains(['eventOverview', 'ctEventOverview'], this.eventInlineNavOptions['currentPageType'])) {
            pageTitleBarOptions.searchBox = true;
            pageTitleBarOptions.moreMenu = true;
        }
        if ((typeof getEventDisplayData !== 'undefined') && (getEventDisplayData.eventPreviewStyle == 'calendar_view') && (pageType != 'categoryOverview')) {
            pageTitleBarOptions.moreMenu = false,
                pageTitleBarOptions.searchBox = true,
                pageTitleBarOptions.searchBoxType = 'calendar',
                pageTitleBarOptions.timeperiod = true,
                pageTitleBarOptions.calendarViewSwitch = true;
        }
        if (this.eventInlineNavOptions['pageType'] == 'single_event') {
            pageTitleBarOptions.nextPrevious = false;
        }
        if (navData) {
            if (navData['prevNav'] && typeof navData['prevNav']['url'] !== 'undefined') {
                pageTitleBarOptions.nextPreviousLinks[0] = this.genereateNavUrl(navData['prevNav']['url']);
                pageTitleBarOptions.nextPreviousLabel[0] = navData['prevNav']['title'];
                pageTitleBarOptions.nextPreviousSubLabel[0] = navData['prevNav']['subLabel'];
            }
            if (navData['nextNav'] && typeof navData['nextNav']['url'] !== 'undefined') {
                pageTitleBarOptions.nextPreviousLinks[1] = this.genereateNavUrl(navData['nextNav']['url']);
                pageTitleBarOptions.nextPreviousLabel[1] = navData['nextNav']['title'];
                pageTitleBarOptions.nextPreviousSubLabel[1] = navData['nextNav']['subLabel'];
            }
            if (navData['backNav'] && typeof navData['backNav']['url'] !== 'undefined' && navData['backNav']['url'] !== '') {
                pageTitleBarOptions.backButton = true;
                pageTitleBarOptions.backButtonData = navData['backNav']['url'];
                pageTitleBarOptions.backButtonLabel = navData['backNav']['title'];
                pageTitleBarOptions.backButtonSubLabel = navData['backNav']['subLabel'];
                if (_.contains(['ctEventOverview', 'eventDetails', 'subEventDetails'], this.eventInlineNavOptions['currentPageType'])) {
                    pageTitleBarOptions.nextPrevious = true;
                }
            }
        }
        return pageTitleBarOptions;
    };
    /**
     * To manipulate nav url if it is coming from event element page.
     */
    FgWebsite.prototype.genereateNavUrl = function (url) {
        var urlParams = [];
        if (this.eventInlineNavOptions['fromTopEvent'] && url.search(/\?fte=/gi) < 0) {
            urlParams.push('fte=1');
        }
        if (this.eventInlineNavOptions['elementId'] && url.search(/\?elid=/gi) < 0) {
            urlParams.push('elid=' + this.eventInlineNavOptions['elementId']);
        }
        if (_.size(urlParams) > 0) {
            return url + '?' + urlParams.join('&');
        }
        return url;
    };
    return FgWebsite;
}());
;
FgWebsiteFn = {
    /* Array convertion to JSON */
    converttojson: function (objectGraph, name, value) {
        if (name.length == 1) {
            //if the array is now one element long, we're done
            objectGraph[name[0]] = value;
        }
        else {
            //else we've still got more than a single element of depth
            if (objectGraph[name[0]] == null) {
                //create the node if it doesn't yet exist
                objectGraph[name[0]] = {};
            }
            //recurse, chopping off the first array element
            FgWebsiteFn.converttojson(objectGraph[name[0]], name.slice(1), value);
        }
    },
    // Function for Website PageLoader 
    startPageLoading: function (options) {
        $('.fg-page-loading').remove();
        $('body').append('<div class="fg-page-loading"><div class="fg-spinner-border" role="status"><span class="sr-only">Loading...</span></div><span>' + (options && options.message ? options.message : jstranslations['loadingVar']) + '</span></div>');
    },
    stopPageLoading: function () {
        $('.fg-page-loading').remove();
    },
    /* For showing toaster notification */
    showToastr: function (msg, type, title) {
        var toastrType = 'success';
        if (type)
            toastrType = type;
        if (title)
            toastrTitle = title;
        toastr.options = {
            positionClass: 'toast-top-center fg-toast',
        };
        toastr[toastrType](msg, title);
    },
};
/*
 * ParseFormField wrapper class
 *
 */
FgWebsiteParseFormField = {
    fieldParse: function () {
        if ($('body').hasClass('dirty_field_used')) {
            FgDirtyFields.updateFormState();
        }
        $('.fg-dev-newfield').addClass('fairgatedirty');
        var objectGraph = {};
        $("form :input").each(function () {
            var attr = $(this).attr('data-key');
            if ($(this).hasClass("fairgatedirty") && typeof attr !== typeof undefined && attr !== false) {
                var inputVal = '';
                var inputType = $(this).attr('type');
                if (inputType == 'checkbox') {
                    inputVal = $(this).prop('checked') ? 1 : 0;
                    if ($(this).is(':checked') && $(this).hasClass('fg-checkbox')) {
                        inputVal = $(this).val();
                    }
                }
                else if (inputType == 'radio') {
                    if ($(this).is(':checked')) {
                        inputVal = $(this).val();
                    }
                }
                else {
                    inputVal = $(this).val();
                }
                if (inputVal !== '' || $(this).is("textarea") || $(this).is("select")) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
                else if (inputType == 'hidden' || $(this).hasClass("hide")) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
                else if ((inputVal === '') && ($(this).attr('data-notrequired') == 'true')) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
            }
        });
        return objectGraph;
    },
    /* Return json of dirty class fields of a particular form with formId */
    formFieldParse: function (formId) {
        $('.sortables').parent().each(function () {
            FgWebsiteFn.resetSortOrder($(this));
        });
        $('.fg-dev-newfield').addClass('fairgatedirty');
        var objectGraph = {};
        $("#" + formId + " :input").each(function () {
            var attr = $(this).attr('data-key');
            if ($(this).hasClass("fairgatedirty") && typeof attr !== typeof undefined && attr !== false) {
                var inputVal = '';
                var inputType = $(this).attr('type');
                if (inputType == 'checkbox') {
                    inputVal = $(this).attr('checked') ? 1 : 0;
                }
                else if (inputType == 'radio') {
                    if ($(this).is(':checked')) {
                        inputVal = $(this).val();
                    }
                }
                else {
                    inputVal = $(this).val();
                }
                if (inputVal !== '' || $(this).is("textarea") || $(this).is("select")) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
                else if (inputType == 'hidden' || $(this).hasClass("hide")) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
                else if ((inputVal === '') && ($(this).attr('data-notrequired') == 'true')) {
                    FgWebsiteFn.converttojson(objectGraph, $(this).attr('data-key').split('.'), inputVal);
                }
            }
        });
        return objectGraph;
    }
};
FgXmlHttp = {
    //function added to focus to error element if exists or to common form error on failing validation
    scrollToErrorDiv: function (element) {
        var focusPos = 100;
        if (typeof element !== 'undefined') {
            if ($(element).length > 0) {
                focusPos = $(element).offset().top;
            }
        }
        else {
            if ($('.alert-danger').length > 0) {
                focusPos = $('.alert-danger').offset().top;
            }
        }
        //padding & margin is to be subtracted for better view
        focusPos = ((focusPos - 60) > 0) ? (focusPos - 60) : focusPos;
        $('html, body').animate({
            scrollTop: focusPos
        }, 'fast');
    },
};
